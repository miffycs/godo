{"version":3,"sources":["To-Do-List.js","App.js","reportWebVitals.js","index.js"],"names":["endpoint","ToDoList","props","onChange","event","setState","target","name","value","onSubmit","task","state","axios","post","headers","then","res","getTask","console","log","get","data","items","map","item","color","style","wordWrap","status","Card","fluid","Content","Header","textAlign","Meta","Icon","onClick","updateTask","_id","paddingRight","undoTask","deleteTask","id","put","delete","this","className","as","Form","Input","type","placeholder","Group","Component","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUAIIA,EAAW,wBA2KAC,E,kDAxKb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAYRC,SAAW,SAACC,GACV,EAAKC,SAAL,eACGD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SAfnB,EAmBnBC,SAAW,WAAO,IACVC,EAAS,EAAKC,MAAdD,KAEFA,GACFE,IACGC,KACCb,EAAW,YACX,CACEU,QAEF,CACEI,QAAS,CACP,eAAgB,uCAIrBC,MAAK,SAACC,GACL,EAAKC,UACL,EAAKZ,SAAS,CACZK,KAAM,KAERQ,QAAQC,IAAIH,OAxCD,EA6CnBC,QAAU,WACRL,IAAMQ,IAAIpB,EAAW,aAAae,MAAK,SAACC,GAClCA,EAAIK,KACN,EAAKhB,SAAS,CACZiB,MAAON,EAAIK,KAAKE,KAAI,SAACC,GACnB,IAAIC,EAAQ,SACRC,EAAQ,CACVC,SAAU,cAQZ,OALIH,EAAKI,SACPH,EAAQ,QACRC,EAAK,mBAAyB,gBAI9B,cAACG,EAAA,EAAD,CAAqBJ,MAAOA,EAAOK,OAAK,EAAxC,SACE,eAACD,EAAA,EAAKE,QAAN,WACE,cAACF,EAAA,EAAKG,OAAN,CAAaC,UAAU,OAAvB,SACE,qBAAKP,MAAOA,EAAZ,SAAoBF,EAAKd,SAG3B,eAACmB,EAAA,EAAKK,KAAN,CAAWD,UAAU,QAArB,UACE,cAACE,EAAA,EAAD,CACE5B,KAAK,eACLkB,MAAM,QACNW,QAAS,kBAAM,EAAKC,WAAWb,EAAKc,QAEtC,sBAAMZ,MAAO,CAAEa,aAAc,IAA7B,kBACA,cAACJ,EAAA,EAAD,CACE5B,KAAK,OACLkB,MAAM,SACNW,QAAS,kBAAM,EAAKI,SAAShB,EAAKc,QAEpC,sBAAMZ,MAAO,CAAEa,aAAc,IAA7B,kBACA,cAACJ,EAAA,EAAD,CACE5B,KAAK,SACLkB,MAAM,MACNW,QAAS,kBAAM,EAAKK,WAAWjB,EAAKc,QAEtC,sBAAMZ,MAAO,CAAEa,aAAc,IAA7B,2BAxBKf,EAAKc,UAgCtB,EAAKjC,SAAS,CACZiB,MAAO,SA9FI,EAoGnBe,WAAa,SAACK,GACZ9B,IACG+B,IAAI3C,EAAW,aAAe0C,EAAI,CACjC5B,QAAS,CACP,eAAgB,uCAGnBC,MAAK,SAACC,GACLE,QAAQC,IAAIH,GACZ,EAAKC,cA7GQ,EAiHnBuB,SAAW,SAACE,GACV9B,IACG+B,IAAI3C,EAAW,iBAAmB0C,EAAI,CACrC5B,QAAS,CACP,eAAgB,uCAGnBC,MAAK,SAACC,GACLE,QAAQC,IAAIH,GACZ,EAAKC,cA1HQ,EA8HnBwB,WAAa,SAACC,GACZ9B,IACGgC,OAAO5C,EAAW,mBAAqB0C,EAAI,CAC1C5B,QAAS,CACP,eAAgB,uCAGnBC,MAAK,SAACC,GACLE,QAAQC,IAAIH,GACZ,EAAKC,cApIT,EAAKN,MAAQ,CACXD,KAAM,GACNY,MAAO,IALQ,E,qDASnB,WACEuB,KAAK5B,Y,oBAiIP,WACE,OACE,gCACE,qBAAK6B,UAAU,MAAf,SACE,cAACd,EAAA,EAAD,CAAQc,UAAU,SAASC,GAAG,KAA9B,0BAIF,qBAAKD,UAAU,MAAf,SACE,cAACE,EAAA,EAAD,CAAMvC,SAAUoC,KAAKpC,SAArB,SACE,cAACwC,EAAA,EAAD,CACEC,KAAK,OACL3C,KAAK,OACLJ,SAAU0C,KAAK1C,SACfK,MAAOqC,KAAKlC,MAAMD,KAClBoB,OAAK,EACLqB,YAAY,oBAKlB,qBAAKL,UAAU,MAAf,SACE,cAACjB,EAAA,EAAKuB,MAAN,UAAaP,KAAKlC,MAAMW,iB,GAlKX+B,aCSRC,MAVf,WACE,OACE,8BACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,SCGOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3C,MAAK,YAAkD,IAA/C4C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f6312472.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Card, Header, Form, Input, Icon } from \"semantic-ui-react\";\r\n\r\nlet endpoint = \"http://localhost:8080\";\r\n\r\nclass ToDoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      task: \"\",\r\n      items: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTask();\r\n  }\r\n\r\n  onChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = () => {\r\n    let { task } = this.state;\r\n    // console.log(\"PRINTING task\", this.state.task);\r\n    if (task) {\r\n      axios\r\n        .post(\r\n          endpoint + \"/api/task\",\r\n          {\r\n            task,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          this.getTask();\r\n          this.setState({\r\n            task: \"\",\r\n          });\r\n          console.log(res);\r\n        });\r\n    }\r\n  };\r\n\r\n  getTask = () => {\r\n    axios.get(endpoint + \"/api/task\").then((res) => {\r\n      if (res.data) {\r\n        this.setState({\r\n          items: res.data.map((item) => {\r\n            let color = \"yellow\";\r\n            let style = {\r\n              wordWrap: \"break-word\",\r\n            };\r\n\r\n            if (item.status) {\r\n              color = \"green\";\r\n              style[\"textDecorationLine\"] = \"line-through\";\r\n            }\r\n\r\n            return (\r\n              <Card key={item._id} color={color} fluid>\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"left\">\r\n                    <div style={style}>{item.task}</div>\r\n                  </Card.Header>\r\n\r\n                  <Card.Meta textAlign=\"right\">\r\n                    <Icon\r\n                      name=\"check circle\"\r\n                      color=\"green\"\r\n                      onClick={() => this.updateTask(item._id)}\r\n                    />\r\n                    <span style={{ paddingRight: 10 }}>Done</span>\r\n                    <Icon\r\n                      name=\"undo\"\r\n                      color=\"yellow\"\r\n                      onClick={() => this.undoTask(item._id)}\r\n                    />\r\n                    <span style={{ paddingRight: 10 }}>Undo</span>\r\n                    <Icon\r\n                      name=\"delete\"\r\n                      color=\"red\"\r\n                      onClick={() => this.deleteTask(item._id)}\r\n                    />\r\n                    <span style={{ paddingRight: 10 }}>Delete</span>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            );\r\n          }),\r\n        });\r\n      } else {\r\n        this.setState({\r\n          items: [],\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  updateTask = (id) => {\r\n    axios\r\n      .put(endpoint + \"/api/task/\" + id, {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.getTask();\r\n      });\r\n  };\r\n\r\n  undoTask = (id) => {\r\n    axios\r\n      .put(endpoint + \"/api/undoTask/\" + id, {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.getTask();\r\n      });\r\n  };\r\n\r\n  deleteTask = (id) => {\r\n    axios\r\n      .delete(endpoint + \"/api/deleteTask/\" + id, {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.getTask();\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <Header className=\"header\" as=\"h2\">\r\n            TO DO LIST\r\n          </Header>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Form onSubmit={this.onSubmit}>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"task\"\r\n              onChange={this.onChange}\r\n              value={this.state.task}\r\n              fluid\r\n              placeholder=\"Create Task\"\r\n            />\r\n            {/* <Button >Create Task</Button> */}\r\n          </Form>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Card.Group>{this.state.items}</Card.Group>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoList;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Container } from \"semantic-ui-react\";\nimport ToDoList from \"./To-Do-List\";\n\nfunction App() {\n  return (\n    <div>\n      <Container>\n        <ToDoList />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}