{"version":3,"sources":["To-Do-List.js","App.js","reportWebVitals.js","index.js"],"names":["endpoint","ToDoList","props","componentDidMount","getTask","onChange","event","setState","target","name","value","onSubmit","task","state","axios","post","headers","then","res","console","log","get","data","items","map","item","color","style","wordWrap","status","Card","fluid","Content","Header","textAlign","Meta","Icon","onClick","updateTask","_id","paddingRight","undoTask","deleteTask","id","put","delete","className","as","fontFamily","fontSize","Form","this","Input","type","placeholder","Group","Component","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0aab6fd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Card, Header, Form, Input, Icon } from \"semantic-ui-react\";\r\n\r\nlet endpoint = \"http://localhost:8080\";\r\n\r\nclass ToDoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      task: \"\",\r\n      items: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getTask();\r\n  }\r\n\r\n  onChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = () => {\r\n    let { task } = this.state;\r\n    // console.log(\"PRINTING task\", this.state.task);\r\n    if (task) {\r\n      axios\r\n        .post(\r\n          endpoint + \"/api/task\",\r\n          {\r\n            task,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          this.getTask();\r\n          this.setState({\r\n            task: \"\",\r\n          });\r\n          console.log(res);\r\n        });\r\n    }\r\n  };\r\n\r\n  getTask = () => {\r\n    axios.get(endpoint + \"/api/task\").then((res) => {\r\n      if (res.data) {\r\n        this.setState({\r\n          items: res.data.map((item) => {\r\n            let color = \"yellow\";\r\n            let style = {\r\n              wordWrap: \"break-word\",\r\n            };\r\n\r\n            if (item.status) {\r\n              color = \"green\";\r\n              style[\"textDecorationLine\"] = \"line-through\";\r\n            }\r\n\r\n            return (\r\n              <Card key={item._id} color={color} fluid>\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"left\">\r\n                    <div style={style}>{item.task}</div>\r\n                  </Card.Header>\r\n\r\n                  <Card.Meta textAlign=\"right\">\r\n                    <Icon\r\n                      name=\"check circle\"\r\n                      color=\"green\"\r\n                      onClick={() => this.updateTask(item._id)}\r\n                    />\r\n                    <span style={{ paddingRight: 10 }}>Done</span>\r\n                    <Icon\r\n                      name=\"undo\"\r\n                      color=\"yellow\"\r\n                      onClick={() => this.undoTask(item._id)}\r\n                    />\r\n                    <span style={{ paddingRight: 10 }}>Undo</span>\r\n                    <Icon\r\n                      name=\"delete\"\r\n                      color=\"red\"\r\n                      onClick={() => this.deleteTask(item._id)}\r\n                    />\r\n                    <span style={{ paddingRight: 10 }}>Delete</span>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            );\r\n          }),\r\n        });\r\n      } else {\r\n        this.setState({\r\n          items: [],\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  updateTask = (id) => {\r\n    axios\r\n      .put(endpoint + \"/api/task/\" + id, {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.getTask();\r\n      });\r\n  };\r\n\r\n  undoTask = (id) => {\r\n    axios\r\n      .put(endpoint + \"/api/undoTask/\" + id, {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.getTask();\r\n      });\r\n  };\r\n\r\n  deleteTask = (id) => {\r\n    axios\r\n      .delete(endpoint + \"/api/deleteTask/\" + id, {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.getTask();\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <Header className=\"header\" as=\"a\" style={{fontFamily: \"Permanent Marker, sans-serif\", fontSize: \"50px\"}}>\r\n            <fff style={{ paddingRight: \"300px\" }}>\r\n              <c style={{ color: \"#A9A9A9\" }}>GO </c>Do List\r\n            </fff>{\" \"}\r\n          </Header>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Form onSubmit={this.onSubmit}>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"task\"\r\n              onChange={this.onChange}\r\n              value={this.state.task}\r\n              fluid\r\n              placeholder=\"Create Task\"\r\n            />\r\n            {/* <Button >Create Task</Button> */}\r\n          </Form>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Card.Group>{this.state.items}</Card.Group>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoList;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Container } from \"semantic-ui-react\";\nimport ToDoList from \"./To-Do-List\";\n\nfunction App() {\n  return (\n    <div>\n      <Container>\n        <ToDoList />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}